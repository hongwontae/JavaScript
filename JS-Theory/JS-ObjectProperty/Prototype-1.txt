1. 프로토타입 객체

1-1. JS의 모든 객체는 부모 역할을 하는 객체와 연결되어 있다.
=> 부모 객체를 Prototype(프로토타입) 객체 또는 줄여서 Prototype(프로토타입)이라 한다.

1-2. Prototype 객체는 생성자 함수에 의해 생성된 각각의 객체에 공유 프로퍼티를 제공하기 위해 사용한다.

1-3. 자바스크립트의 모든 객체는 [[Prototype]]이라는 인터널 슬롯(internal slot)를 가진다.
=> 1-1의 부모 객체를 의미한다. 부모 객체는 null or 객체이다.
=> null인 경우는 최상위 부모를 의미한다.

1-4. [[Prototype]]을 Prototype 객체라고 부르며, __proto__로 접근할 수 있다.
=> __proto__로 접근하면 내부적으로 Object.getPrototypeOf가 호출되어 프로토타입 객체를 반환한다.

1-5. 객체를 생성할 떄 prototype이 결정된다. 결정된 프로토타입은 임의로 다른 객체로 변경할 수 있다.



2.[[Prototype]] vs prototype 프로퍼티

2-1. 함수
=> 함수도 객체라서 [[Prototype]]을 갖는다.
=> 그리고 prototype 프로퍼티도 소유한다.

2-2. [[Prototype]]
=> 함수를 포함한 모든 객체가 가지고 있는 인터널 슬롯이다.
=> 객체의 입장에서 자신의 부모 역할을 하는 프로토타입 객체를 가리키며 함수 객체의 경우 Function.prototype를 가리킨다.

2-3. prototype 프로퍼티
=> 함수 객체만 가지고 있는 프로퍼티이다.
=> 함수 객체가 생성자로 사용될 때 이 함수를 통해 생성될 객체의 부모 역할을 하는 프로토타입 객체를 가리킨다.