1. 클로저란?
정의 : 함수와 함수가 선언되었을 떄의 렉시컬 환경의 조합
(자신이 선언된 당시의 환경을 기억하는 함수)
(생명 주기가 끝난 외부 함수의 변수에 접근할 수 있는 함수)
=> 생명 주기가 끝난 외부 함수의 변수에 접근할 수 있는 함수를 클로저라고 한다.


특징
1-1. 동작원리
자바스크립트의 모든 함수는 자신이 선언된 환경의 주소를 저장하고 있다. (렉시컬 환경을 갖고 있다. 그래서 클로저가 가능)
JS의 모든 함수는 [[Environment]]라 불리는 숨김 프로퍼티를 갖는다. 이곳에 렉시컬 스코프에 대한 참조값이 저장된다.
함수 본문에서 [[Environment]]를 사용해서 외부 함수의 변수에도 접근할 수 있게 된다.

1-2. 클로저 특징
1. 상태 유지
2. 정보 은닉
3. 전역 변수 사용 억제 
=> 부분적으로 변수 공유 하지만 전역 변수는 아니기 떄문에 안전한 코드 가능


1-3. React useState와 Closure
1. 상태를 관리하기 위해서는 함수가 재호출 되었을 때 이전 상태를 기억하고 있어야 한다.
=> 이를 위해 클로저를 사용한다.

1-4. Closure 유의할 점
1. 메모리 손해 가능성
=> 내부 함수가 생명 주기가 끝난 외부 함수의 변수를 참조하기 떄문에 가비지 컬렉터에 의해 메모리가 사라지지 않는다.



