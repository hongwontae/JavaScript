1. 'use strict'
정의 : JavaScript의 업데이트 사항을 적용시키는 구문이다.

특징
1-1. 스크립트 최상단에 'use strict'을 명시하면 된다.
1-2. 특정 함수에서만 'use strict'을 사용할 수 있다.
1-3. 모듈 스크립트는 엄격모드가 기본값이다.


2. use strict의 제약 사항
2-1. 전역 변수를 허용하지 않으며, 전역 변수 선언시 오류가 발생

2-2. 변수 이름 선언 및 사용시 "var"가 누락되면 오류가 발생

2-3. 값 할당 실패는 오류가 발생 (NaN = 1;)

2-4. 삭제할 수없는 속성을 삭제하려고 하면 (Object.prototype 삭제) 오류가 발생

2-5. 읽기 전용 속성에 쓰기를 하려고 하면 오류가 발생

2-6. 객체 리터럴의 모든 속성 이름은 고유해야한다. (var x = {x1 : "1", x1 : "2"})

2-7. 함수의 파라메터는 고유해야 한다. (function calc (x, x) {}와 같이 같은 파라미터 이름 중복 사용 금지)

2-8. 진수 구문과 8진수 이스케이프 표현 금지(var a = 010; 과 같은 8진수 표현 사용 금지)

2-9. with 키워드 금지

2-10. 'eval', 'agruments'는 예약어로 변수명으로 사용할 수 없다.(var eval = 1;)

2-11. 변수를 생성하는 eval()은 보안상 사용할 수 없다.(eval ("var x = 2");)

2-12. 변수 이름과 함수 이름 삭제 금지 (var a = 1; delete a;) (delete 사용 불가)

2-13. arguments.callee 미지원. arguments.callee 속성은 이름이 없는 익명 함수(anonymous function)를 선언해서 
사용할 때 실행 중인 함수 안에서 함수 자신을 참조하기 위해서 사용한다. 재귀 호출 방식으로 자신을 호출하는 방식은 
잠재적으로 참조 오류를 발생시킬 수 있다.


3. use strict의 this
