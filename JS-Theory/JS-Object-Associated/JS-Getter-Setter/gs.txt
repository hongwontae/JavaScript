1. getter/ setter
1-1. dot, 대괄호 표기법으로 접근하여 값을 가져오거나 변경하지 않고 getter, setter을 사용하는 기법
1-2. 정보은닉, 올바른 값 설정

2. getter
2-1. 객체의 속성 값을 반환하는 메서드

3. setter
3-1. 객체의 속성 값을 설정하는 메서드
3-2. setter의 이름과 데이터 프로퍼티의 이름이 같으면 무한루프에 걸리게 된다.
=> 계속 자기 자신을 호출하는 상황에 맞딱뜨리기 떄문이다.

4. getter/setter 공통점
호출하는 것이 아니라 접근만 해도 호출된다.
=> user.getName
=> user.setName = 'Hwt'


4. 프로퍼티의 종류
4-1. 데이터 프로퍼티 : 일반적인 프로퍼티, 메서드
4-2. 접근자 프로퍼티 : getter, setter을 의미한다.


5. 객체의 모든 프로퍼티에 대해서 설정할 수 있다.
=> Object.defineProperty을 사용하면 getter와 setter을 생성하면 getter, setter Name을 불러올 필요없이
그냥 객체의 프로퍼티만 호출하거나 설정해도 getter와 setter가 실행된다.



