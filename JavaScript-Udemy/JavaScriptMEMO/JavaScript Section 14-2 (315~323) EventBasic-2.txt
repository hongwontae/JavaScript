1. 프로그래밍적으로 DOM 요소 트리거하기
프로그래밍적으로 이벤트를 트리거하고자 할 때가 존재한다.

ex) 
li를 눌러도 양식이 제출되게끔 하고 싶다.
이벤트 위임 코드의 이벤트 핸들러에 form.click()를 호출한다.
이 때는 form.addEventListener가 작동하지 않는다. => 모든 이벤트 트리거가 이러한 작동을 하지는 않는다.
양식 제출에 대해서는 이벤트 리스너가 트리거되지 않는다.

이벤트 리스너의 이벤트 핸들러에 다른 이벤트를 트리거하는 함수를 호출하면 호출된 함수의 이벤트 핸들러가 제대로 작동할 수 도 있고 안 할 수 도 있다. => submit()같은 경우에는 stopProgagaion이 작동하지 않았다. click의 경우에는 제대로 작동했다.


2. 이벤트 핸들러 함수 & "this"
이벤트 핸들러 내에서 this는 다르게 작동한다.
=> 이벤트 리스너가 등록된 요소를 가르킨다.
=> event.currentTarget == this

(화살표 함수내의 this는 할당된 모든 바인딩을 무시하고 바같을 참조한다. window,다른 함수, ect...)



3. 드래그 & 드롭 - 이론

드래그를 설정하려면 
1. DOM 요소에서 드래그가 가능한 프로퍼티를 참으로 설정해야 한다. or 드래그가 가능한 속성을 추가한다.

=> 드래그 프로퍼티나 드래그 속성이 ture여야 한다.
=> 드래그를 이용할 요소의 속성에 draggable을 true로 설정한다.

2. 다음으로 드래그 가능한 요소에서 dregstart 이벤트를 트리거한다.

드래그를 사용하면 JS에게 아이템이 어디에 드롭될 수 있는지를 알려야 한다.


4. 드래깅가능한 요소 구성하기
요소의 html 속성에 draggable을 true로 해놓으면 드래그 자체는 가능해진다. => 다만 갈 곳이 없다.

드래그되는 요소에 대해 addEventListener를 걸고 트리거를 dragstart로 걸어준다. (이 이벤트 핸들러에서 생성되는 미리보기 이미지나 드래그 클릭 마우스 커서, etc..등을 바꿀 수 있다.)

드래그를 통해 옮겨갈 곳에 데이터를 보내기 위한 프로퍼티나 메서드가 event가 존재한다. (trigger를 dragstart로 했다면..)
드래그 이벤트이기 때문에 데이터 송신 프로퍼티나 객체가 존재한다. event.transfer.setData();
이를 통해서 setData()를 호출할 수 있다. setData()는 서로 다른 유형의 데이터를 설정할 수 있다. (text/plaim => 텍스트, link, html, xml contnet을 첨부할 수 있다.)

data.transfer.effectAllowed => 어떤 종류의 드래그 앤 드롭 작업이 처리되는지를 설명한다. (이동, 복사, none, 링크 등..) => 이를 따라 브라우저의 커서가 업데이트되야 한다.


5. 드롭 구간 만들기
드롭 구역을 표시하려면 이벤트 리스너를 추가하고 preventDefault()를 설정해야 한다.

드롭 구역의 트리거는 dragenter or dragover이다.
이 이벤트 리스너에서 event.preventDefualt()를 설정하면 이 공간에 요소를 드롭하는 것이 가능해지고 드롭 이벤트가 트리거 된다. => 이 공간에서는 유형만 파악이 가능하다. this.id같은 특정한 값을 get하는 것이 불가능하다.

드롭 구역의 트리거 dragleave => 요소가 리스트를 벗어나면 트리거된다.


6. 데이터 + 요소 드롭핑 & 이동
트리거가 'drop'이라면 드롭이동으로 옮겨진 요소의 데이터를 얻을 수 있다.
=> event.transfet.getData('text/plain');



7. drag & drop Summary
dragstart => 드래그를 시작했을 때 발생하는 이벤트 트리거이다.
dragover => 드래그 중일 때 수백밀리초마다 발생하는 이벤트이다. e.preventDefault()로 막아주는 것이 좋다.

drag 값 => drag의 데이터에 관한 값들은 transfer에 저장되어 있다. 
(event.transfer.SetData(key,value)); => 드래그 시 값 저장
(event.transfer.GetData(key)) => 드랍 시 저장한 값을 불러와 사용한다.

drop => 드래그를 놓았을 때 발생하는 이벤트 트리거이다. dragstart 이벤트에서 설정한 넘길 값을 drop 이벤트로 받는다.









































