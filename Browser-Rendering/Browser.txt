1. 브라우저 컴포넌트
정의 : 브라우저를 구성하고 있는 요소와 레이어

1-1. 사용자 인터페이스(UI)
브라우저에서 볼 수 있는 모든 것, 요청한 페이지의 창의 모든 UI를 의미한다.

1-2. 브라우저 엔진
사용자 인터페이스와 렌더링 엔진 사이의 중개자 역할을 한다.

1-3. 렌더링 엔진
HTML, CSS, JS를 파싱하고 그 결과물을 바탕으로 페이지를 그려내는 역할을 한다.
Chrome, Opera, Edge => Blink/ Safari => webkit

1-4. 네트워크 레이어
HTTP, HTTPS 같은 프로토콜을 이용하여 외부의 리소스를 얻어내고, 서버에 요청을 보낼 떄 사용하는 레이어

1-5. JS 인터프리터
JS를 해석하고 실행하는 역할, V8

1-6. UI 백엔드
브라우저가 동작하고 있는 OS의 인터페이스를 따르는 UI를 처리한다.
Alert, Select-box가 OS마다 다르게 행동

1-7. 자료 저장소
브라우저 자체 로컬 저장소를 의미한다.
Storage, indexDB, Cookie, 웹SQL, 파일시스템...


2. 렌더링 엔진의 동작 과정
페이지 접속 => html과 css를 파싱 => 렌더 트리 구축 => 레이아웃 or 리플로우 => 페인트
이 모든 과정을 중요 렌더링 경로라고 한다.


2-1. 파싱
정의 : 토큰화된 코드를 구조화하는 과정을 의미한다. 이런 파싱 과정을 전문적으로 해주는 부분을 파서라고 부른다.
(토큰화 => 의미가 있는 최소 단위로 코드를 쪼개는 것)

1. 더 정확하게는 => 어휘분석기(Lexical scanner, Lexer)를 통해 토큰화 된 코드가 생성되고, 이를 파서가 해석하는 순서이다.

2. 파싱과정은 문자열이 정해진 문법들을 모두 따르는지를 확인하는 과정이다.
문법 => 어휘, 문법 규칙으로 구성된다.

3. HTML, CSS는 렌더링 엔진이 파싱, JS는 JS 인터프리터가 파싱한다.

