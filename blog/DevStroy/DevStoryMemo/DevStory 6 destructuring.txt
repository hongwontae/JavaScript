구조분해는 객체나 배열안의 값을 추출하여 변수에 대입하는 방식이다.

객체나 배열 구조분해는 내가 알고 있던 방식을 알려준다.

1. 객체 구조분해에서 키의 이름과 같지 않은 구조분해할당은 undefined가 반환된다.

2. 객체나 배열의 할당하고 싶은 변수에 default 변수명을 줄 수 있다.
(defalut변수명의 값은 = 으로 할당한다.)

ex)
let b = {name1 : 'asd', age1 : 20, arr:[1,2,3,4,5], name2 : 'koala3121'};
let {name1, age1, arr, name2, name3 = 'ko'} = b;
console.log(name3); //ko;

3. 배열에서 무시하고 싶은 요소는 리스트 매칭을 사용한다. => 무시하고 싶은 요소에 콤마를 사용한다.

ex) 
let a1 = [1,2,3,4,5,6,7,8,9,10];
let [,,a5] = a1
console.log(a5); //3 

4. 객체의 구조분해할당에서 키이름으로 변수명을 잡고 싶지 않을 경우 별칭을 사용할 수 있다.
e
ex)
let c = {player : 'hwt', age3 : 28, sprots : 'soccer', team : 'riverpool'};
let {player, age3, sprots, team : GreatTeam} = c;
console.log(GreatTeam); // riverpool

5. 중첩된 객체와 배열의 구조분해할당은 중괄호나 대괄호를 사용하여 꺼낸다.

ex) 중첩 배열 구조분해할당
let e = [1,2,3,4,5,[100,200,300]]
let [one,two,,,,[...first]] = e;
console.log(one);
console.log(two);
console.log(first);

ex) 중첩 객체 구조분해할당
let d = {d1: {d2 :'hwt', d3 : 20, d4 : 'Mancherster City'}}
let {d1 : {d4}} = d;
console.log(d4);


6. 함수의 return값이 배열이나 객체라면 구조분해할당을 사용할 수 있다.

ex)
let f =function(){return {f1:'hwt', f2 : 300, f3 : function(){console.log('도객 일도살')}}} 
let {f1,f2,f3} = f();
console.log(f1);
console.log(f2);
console.log(f3());


7. 함수 호출 시 인자에 객체를 전달하고 함수의 매개변수에 구조 분해를 사용할 수 있다.

ex)
let g = {g1: 'hwt', g2 : '시게히라', g3 : '난기'}

function g4({g1 : myName, g2 : choIn1 ,g3 : choin2}) {
    console.log(`g1 = ${myName}, g2 = ${choIn1}, g3 = ${choin2}`)
}

g4(g);






















