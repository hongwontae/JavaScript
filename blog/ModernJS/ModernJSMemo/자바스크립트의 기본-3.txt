1. while, for, switch
break => 반복문을 멈출 수 있게하는 키워드
continew => 반복문을 지속하게 해주는 키워드
=> 둘 다 if문과 함께 사용한다.


2. 함수
function 함수이름 (매개변수) {본문} => 기본적인 JS 함수 선언문
매개변수 => 함수 선언할 떄 ();
인수(인자) => 함수를 호출할 떄 ();

함수 내에서 전역변수에 접근가능, 다른 함수에서나 전역변수에서 함수변수에 접근 불가능

매개변수에 기본값을 줄 수 있다.


3. Basic Function

function sayHi(){console.log('아메바')} => 함수 선언문
let a = function(){alert('Hello')} => 함수 표현식
b.forEach((currentValue)=>{currentValue}) => 콜백 함수, 인자에 함수가 들어가는 방식, 이름이 없음으로 익명함수라고도 부른다.

JS엔진은 함수 선언문을 모두 등록하고나서 스크립트를 실행한다.
함수 선언문은 어디에서든 실행가능하고 함수 표현식은 정의되고 나서 사용이 가능하다. => 함수 선언문만 호이스팅이 된다.


4. 화살표 함수 기본
콜백함수(익명함수), 함수 표현식에 사용된다. 일반적인 함수 선언문에서는 사용 불가능하다.
중괄호가 있다면 return이 자동으로 생기지 않는다. 
화살표 함수의 this는 함수 내부를 참조하지 않는다. 항상 외부를 참조한다. (그냥 사용하면 window를 가르킨다.)



Review-1
함수 선언문 => 호이스팅 된다. function이 먼저 온다.
함수 표현식 => 익명함수를 변수에 할당한다.
화살표 함수 => this가 밖에 할당된다. ()=>{}, 매개변수 하나이면 ()없어도 된다. return값을 생략하고 싶다면 한 줄에서 코드를 작성하고 중괄호를 없앤다. 














































