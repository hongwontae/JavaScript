모듈은 단지 파일 하나, script 하나에 불과하다.
모듈은 export와 import 키워드를 사용해서 모듈에서 내보내고 가져오기가 가능해진다.

export 해당 항목 앞에 붙이면 외부 모듈에서 해당 항목에 접근할 수 있다.(모듈 내보내기)
import 사용하면 외부 모듈의 기능을 가져올 수 있다.(모듈 가져오기)

모듈은  <script type="module"> 속성을 설정해 해당 스크립트가 모듈이란 걸 브라우저가 알 수 있게 해줘야 한다.

모듈은 로컬 파일에서 동작하지 않는다. => CORB 때문이다.
HTTP, HTTP 프로토콜을 통해서만 동작한다. => node.js serve를 사용한다.


일반 스크립트 vs 모듈
1. 항상 엄격모드이다.
=> 키워드 없이 변수 선언 불가 => 엄격모드
=> 전역레벨을 바라보는 this가 window를 참조하지 않음 => 엄격모드

2. 모듈 레벨 스코프 
모듈은 자신만의 스코프가 있다. 모듈 내부에서 정의한 변수나 함수 등은 다른 스크립트에서 접근할 수 없다.
=> 가져오려면 export import 키워드를 사용해야 한다.
=> html 파일에서 스크립트를 불러올 떄의 src는 import 쪽이고 type= "module"를 기입해야 한다.


모듈이 여러 곳에서 사용되더라도 모듈은 최초 호출 시 단 한번만 실행된다. 실행 후 결과는 해당 모듈을 가져가려는 모든 모듈에 내보내진다.

export 하는 방법
1. 각 변수나 함수, 클래스 옆에 export 키워드를 붙이는 방법

2. export default 키워드 옆에 변수나 함수, 클래스 명을 붙이는 방법 => 한 번만 사용가능하다.

3. export {export할 변수명, export할 변수명...};
=> 여러개를 export하는 방법이다.

import 하는 방법
1. import * as 변수명 from '~~.js';
=> 해당 js파일의 모든 export를 가져오는 방법

2. import {export} from '~~.js';
=> 해당하는 export 하나만 가져오는 방법

3. import {export, export} from '~~.js';
=> 해당하는 export 여러개 가지고 오는 방법

4. import 변수명 from '~~.js';
=> defualt export를 가져오는 방법


별칭 부여 방법
import {export as 별칭명} from '~~.js';

실행만 시킬 목적
=> import '~~.js';


동적으로 import 문 실행하기
import() => Promise 기반 문법이다. 함수가 아니다. import()는 type = "module" 없이도 동작한다.
export의 값을 동적으로 불러올 떄 import()를 사용한다.

모듈은 HTTP, HTTPS 프로토콜을 통해서만 동작한다.


브라우저 모듈 특징
1. 모듈 스크립트는 항상 지연 실행
모듈 스크립트는 HTML이 다운되고 실행되기 전까지 실행되지 않는다. 모듈 스크립트의 크기가 작아서 다운로드가 먼저 되었다 하더라도 기다린다.

2. 모듈 비동기 처리
async 속성이 붙으면 HTML 다운되고 실행되기 전까지 기다리지 않고 실행한다.

3. 모듈은 단 한 번만 실행
동일한 모듈이 여러 곳에서 사용되더라도 모듈은 최초 호출 시 단 한 번만 실행된다.
모듈을 가져오는 모듈이 여러개라도 최초 호출 한 번만 실행되고 이 모듈이 실행된 사안에 영향을 받은 모듈에 건네준다.




























