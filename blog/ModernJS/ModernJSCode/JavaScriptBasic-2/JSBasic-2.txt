7. 형 변환
JS의 자료형은 동적 타입이다. => 자유로운 형 변환이 가능하다.

숫자 형 변환
null, undefined, false => 0
true => 1
string => Case by Case/ ''사이에 문자가 하나라도 있으면 NaN, '' 사이에 문자만 있다면 그 숫자로 형 변환

불린 형 변환
0, undefined, null, NaN, "" => false
그 외 => true


8. 기본 연산자와 수학
피연산자 => 연산자의 대상
단항연산자 => 피연산자를 하나만 받는 연산자
이항연산자 => 피연산자를 두 개 이상 받는 연산자

% => 나머지 연산자/ ** 거듭제곱 연산자
+ => 단항연산자와 이항연산자로 사용된다./ + = number()/ +는 붙이거나 계산한다.
복합 할당 연산자 => +=/-= => num = num+5 => num+=5;
증가, 감소 연산자 => ++/--
쉼표 연산자 => , 마지막 표현식을 제외한 모든 것을 버리는 연산자


9. 비교 연산자
비교 연산자는 Boolean을 반환한다.
비교 연산자를 사용할 떄 타입이 맞지 않으면 숫자형으로 형 변환 후 계산한다.

==(동등 연산자)는 형 변환을 하여 비교한 값을 반환한다.
(동등 연산자는 피연산자가 null이나 undefined면 형 변환을 하지 않는다, 피연산자가 null이랑 undefined로만 이루졌
을 떄 만 형변환하여 true를 반환한다.)
(undefined는 비교대상으로 사용하면 안된다. 모두 false 값이 나온다.)
===(일치 연산자)는 형 변환을 하지 않고 비교한다.


10. if와 ?
if => if문/ else/ else if
? => 삼항 연산자
=> age=<10 ? '나이 10 이하' : age=<20 ? '나이 20 이하'
=> 삼항 연산자 High


11. 논리 연산자
|| => or 연산자, 하나라도 참이면 참을 반환, JS에서 ture값을 찾는 용도
&& => and 연산자, 모두 참이야 참을 반환, JS에서 false값을 찾는 용도
&& 연산자가 || 연산자보다 우선순위가 높다.
!은 논리 부정 연산자이다. ture을 false로 false로 true로 바꾼다.


12. 병합 연산자 nullish
?? => 병합 연산자이다. null과 undefined가 아닌 것을 찾는다. 둘 다 null이나 undefined면 맨 뒤를 찾는다.
|| 연산자와 비슷하지만 조금 다르다. ||은 0를 falsy처리한다. 병합 연산자는 그렇지 않는다.

