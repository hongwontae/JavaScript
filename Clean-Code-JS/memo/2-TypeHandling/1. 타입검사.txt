1. 타입검사 (typeof)
=> typeof 연산자는 피연산자의 타입을 검사하여 무슨 타입인지 문자열로 반환합니다.

1-2. 사용법
1. typeof 123 => 'number'
2. typeof('123') => 'string'

1-3. 원시타입은 판별하기 쉽지만 참조타입은 typeof로 타입을 판별하기 어렵습니다.
=> typeof class => 'function'

1-4. 예외
typeof null = 'object'; (언어적인 오류가 반환됩니다.)


2. JS는 동적으로 변하는 언어입니다.


3. instanceof
=> instanceof 연산자는 객체의 프로토타입 체인을 검사합니다.


4. Object.prototype.toString.call()

4-1. [[Class]] 속성
=> 자바스크립트 객체가 무엇인지를 나타내는 내부 슬롯입니다.
=> Object.prototype.toString()을 호출할 때 이 [[Class]] 값이 문자열로 반환됩니다.
=> 자바스크립트 엔진 내부에서 자동으로 관리됩니다.
=> 모든 객체는 [[Class]] 속성이 존재합니다. (원시타입일 떄 일시적으로 래퍼 객체로 감싸서 반환하는 매커니즘)
