1. 호이스팅이란?
=> 컴파일 시(프로그램이 동작할 떄)에 선언을 스코프의 최상단으로 끌어올려 주는 것입니다.


2. 변수 호이스팅
2-1. var
=> 선언은 위로 올라가지만, 실제 값은 선언 위치에서 할당됩니다.

2-2. let과 const 
=> let과 const로 선언된 변수도 호이스팅되지만, **"일시적 사각지대(Temporal Dead Zone, TDZ)"**
 라는 개념이 적용되어 초기화되기 전에는 접근할 수 없습니다.


3. 함수 호이스팅
3-1. 함수 선언문
=> 함수 선언문은 완전히 호이스팅됩니다. 
즉, 선언과 초기화가 모두 스코프 최상단으로 끌어올려지므로 함수 선언 전에 호출할 수 있습니다.

3-2. 함수 표현식
=> 함수 표현식은 호이스팅되지 않습니다.


4. 클래스 호이스팅
4-1. class 선언도 호이스팅됩니다. 하지만 let과 const처럼 **일시적 사각지대(TDZ)**가 적용되므로, 
 선언 전에 접근하려고 하면 ReferenceError가 발생합니다.


** JavaScript-High (JS 실행과정(호이스팅, TDZ))에 완벽 정리
