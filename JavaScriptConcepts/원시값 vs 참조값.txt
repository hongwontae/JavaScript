원시 타입 (원시값) (Primitive Type): String, Number, Boolean, Null, Undefined, Symbol
객체 타입 (참조값) (Reference Type): Array, Object, Function

원시값 => 변경 불가능한 값이다. 재할당이 불가능하다는 말이 아니다. 메모리에 올라간 값이 변하지 않는다는 것이다.
원시값이 변수에 저장될 때에는 메모리 공간이 확보되어 그 공간에 값이 저장되고 변수는 그 주소를 참조한다.
재할당도 마찬가지로 새로운 메모리 공간을 확보하여 값을 저장하고 변수가 참조하던 기존 주소를 새로 할당한 값의 주소로 변경하는 것이다. 즉, 값이 직접 변경되는 것이 아닌 참조하는 메모리 공간의 주소가 변경되는 것이다.

참조값 => 참조값은 변경 가능한 값이다. 참조 값을 변수에 할당하면 변수에는 참조 값이 저장된다. 
실제 객체의 값은 별도의 메모리 공간에 저장되며 변수는 그 공간을 참조하는 주소를 값으로 갖는다. 
즉, 참조값은 생성된 객체가 저장된 메모리 공간의 주소를 의미한다. 참조값은 재할당 없이 직접적으로 객체에 접근하여 프로퍼티를 동적으로 추가, 갱신, 삭제가 가능하다. 이것이 변경 가능한 값의 의미이다.

참조값 - 참조값주소 - 값
참조값은 이 값에 직접적으로 접근하여 값을 변경할 수 있다.

원시값 - 원시값주소 - 값
원시값은 직접적으로 값에 접근할 수 없다. 재할당하려면 새로운 메모리 공간을 만들고 해당 변수와 연결한다.
필요없어진 메모리 공간은 가비지 컬렉터에 의해서 제거된다.
