변수를 할당하는 시점에서 데이터 구조나 데이터 타입에 의해 사용할 수 있는 함수나 프로퍼티가 상속된다.
이 상속되는 함수나 프로퍼티를 프로토타입이라고 부른다. 프로토타입 = 객체

프로토타입은 값을 할당하는 시점에 결정되고 프로토타입은 변경될 수 있다.

js의 프로토타입은 객체지향의 상속 개념을 구현하는데 이를 통해 부모 객체의 프로퍼티를 자식 객체가 사용할 수 있다.

객체 리터럴로 객체를 생성하면 => 그 객체의 프로토타입은 Object.prototype이다.
생성자 함수로 객체를 생성하면 => 그 객체의 프로토타입은 생성자함수명.prototype이다. 그리고 이 생성자함수명.prototype의 프로토타입은 Object.prototype이다.


프로토 타입 체인
객체는 자신의 프로토타입 객체의 프로퍼티에 접근할 수 있습니다. 그냥 막 프로토타입 객체를 찾아가는건 아니고, 객체에서 프로퍼티를 접근하려 보니 자기 자신에게 그러한 프로퍼티가 없는 경우 프로토타입 객체에 혹시 그것이 있나 찾으러 가는 것입니다. 그리고 자신의 프로토타입 객체에도 그 프로퍼티가 없으면 더 상위의 프로토타입 객체에 찾으러 가서 있으면 불러옵니다. 이런 과정을 거쳐서 최종적으로는 모든 객체의 부모 객체인 Object.prototype에게까지 접근을 하게 되는데 이런 일련의 접근 프로세스를 prototype chianing이라고 부릅니다.























