Promise

let promise = new Promise(function(reslove, reject){
    code..
})

자바스크립트 Promise 객체는 비동기 작업의 최종 완료 또는 실패를 나타내는 독자적인 객체라고 보면 된다.

비동기 처리를 위해 콜백을 사용한다. => 콜백지옥에 빠진다. => 이를 위해서 프로미스를 사용한다.
프로미스는 인자로 전달받은 콜백 함수를 내부에서 비동기 처리한다.

비동기 처리는 DOM이벤트와 Timer함수, Ajax 요청 등이 있다. => 어느 시점에 일어나는 일
DOM은 이벤트가 트리거가 되면 인자의 함수를 실행시킨다. => 콜백함수, 이 콜백함수가 이벤트 루프를 통해 비동기 처리된다.
=> 비동기 처리를 위해서 콜백함수가 사용된다.

new Promise()에 전달되는 인자는 함수이며, executor 실행자(실행함수)라고 부른다.
executor의 인수 resolve와 reject는 자바스크립트에서 자체 제공하는 콜백이다. 
개발자는 resolve와 reject를 신경 쓰지 않고 executor 안 코드만 작성하면 된다.
대신, executor에선 결과를 즉시 얻든 늦게 얻든 상관없이 상황에 따라 인수로 넘겨준 콜백 중 하나를 반드시 호출해야 한다.

resolve(value) — 일이 성공적으로 끝난 경우 그 결과를 나타내는 value와 함께 호출
reject(error) — 에러 발생 시 에러 객체를 나타내는 error와 함께 호출

new Promise 생성자가 반환하는 promise 객체는 다음과 같은 내부 프로퍼티를 갖습니다.
1. state — 처음엔 "pending"(보류)이었다 resolve가 호출되면 "fulfilled", reject가 호출되면 "rejected"로 변합니다.
2. result — 처음엔 undefined이었다 resolve(value)가 호출되면 value로, reject(error)가 호출되면 error로 변합니다.