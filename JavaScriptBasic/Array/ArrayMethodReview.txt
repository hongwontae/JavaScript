1. 배열 생성 방식
=> let a = [1,2,3]
=> let a1 = new Array(1,2,3)
=> let a2 = Array.of(1,2,3);
=> let a3 = Array.from(a2); => 유사배열객체나 Iterable한 객체들을 Real 배열로 만드는 방법이다.

2. push, unshift, pop, shift
=> push는 뒤에 추가, unShift는 앞에 추가, pop은 뒤에 제거, shift는 앞에 제거

3. splice() => String의 substring과 비슷하다. 배열을 조작하는 메서드이다. 새로운 반환값 x

4. slice() => 배열을 복사하는 메서드이다. 얕은 복사이다. 

5. indexOf() => 해당 값에 대한 인덱스를 반환한다.

6. lastIndexOf() => indexOf()와 같지만 뒤에서부터 시작한다.

7. concat() => 서로 다른 배열을 합치는 메서드

8. find() => 배열에서 일치하는 값을 찾기 위한 메서드이다.

9. findIndex() => find()와 같은 로직이지만 인덱스를 반환한다.

10. forEach() => 배열의 for문이다. 반환값은 없다.

11. map() => 반환값이 존재하는 forEach문이라고 생각하면 된다. 반환값은 배열

12. filter() => 일치하는 값을 찾아서 배열로 반환하는 메서드이다.

13. reverse() => 배열의 정렬 순서를 뒤집는다.

14. sort() => 배열의 정렬방식을 조작한다. => 인자는 2개이고 a-b, b-a로 작동시키면 숫자는 내림차순, 오름차순으로 정렬된다.

15. split() => 문자열로 배열을 만드는 메서드

16. join() => 배열을 문자열로 만드는 메서드이다. 인자로 문자열을 주면 각 문자열 사이의 값이 된다.

17. reduce() => 누적계산기 로직이다. 
ex) let a = [1,2,3,4,5];
  let b = a.reduce((acc, cur, idx, arr) => {
    return acc+cur
  },10) // => 25

18. includes() => 배열안의 값이 존재하는지 Boolean으로 반환한다.

19. rest연산자 => 값들을 묶어서 배열로 만든다.

20. spread연산자 => 값들을 풀어서 개별 요소로 만든다.