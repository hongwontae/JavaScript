Array Method

1. 배열은 객체이다.
2. 배열은 for-of 반복문으로 각 요소를 반환시킬 수 있다.


3. 배열을 생성하는 방법
3.1 const a = [1,2,3];
3.2 let b = new Array(1,2,3);
3.3 let c = Array.of(1,2,3);
3.4 let d = Array.from(c); => 인자로 넣은 유사배열객체를 Real 배열로 만드는 방법


4. push, unShift, pop, shift
=> push는 맨 뒤에 추가, unShift는 맨 앞에 추가, pop은 맨 뒤 제거, shift는 맨 앞 제거


5. splice();
=> 배열을 복사하여 반환하는 메서드가 아니다. 기존의 배열을 change한다.
=> 매개변수는 2+1~n개까지 받을 수 있다.
=> 첫 번쨰 인자는 시작할 인덱스, 두 번쨰 인자는 제거할 항목의 숫자, 세 번째 인자부터는 삭제한 요소 대신 들어갈 값들이다.
=> 인자가 하나라면 인자로 들어간 숫자의 길이를 제외하고 나머지는 다 삭제하라는 의미이다.
=> 첫 인자에 음수를 사용하여 작동시킬 수 있다. 음수는 길이로직, 뒤에서부터


6. slice();
=> 얕은 복사, 중첩된 배열의 중첩된 값은 새로운 참조값을 가지지 못한다.
=> 첫 번쨰 인자는 복사할 인덱스 시작점, 두 번쨰 인자는 가져올 배열의 길이
=> 아무것도 넣지 않으면 전체 복사한다.

ex) let a = [1,2,3,4,5];
    let a1 = a.slice(); => [1,2,3,4,5];
    let a2 = a.slice(2); => [3,4,5];
    let a3 = a.slice(1,4); => [2,3,4];


7. concat();
=> 배열을 합치는 메서드이다.


8. indexOf();
=> 해당하는 값에 대한 인덱스를 반환한다. 일치하는게 없다면 -1를 반환한다.
=> 배열안의 해당하는 값이 중복되어 있다면 첫 번쨰로 일치하는 것을 반환하고 메서드를 종료시킨다.
=> 중첩된 배열에서 원하는 것을 찾고 싶다면 두 번쨰 인자를 사용해야한다. 숫자를 넣으면 길이로 인식하여 그 이후부터 찾으라는 뜻이다.


9. lastIndexOf();
=> indexOf()와 같지만 뒤에서부터 찾는다.


10 find()
=> 콜백함수를 사용하여 배열에서 일치하는 값을 찾기 위해서 사용된다.
=> 일치하는 값을 찾으면 종료된다.

