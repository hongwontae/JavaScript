1. Class and ProtoType
[[ProtoType]] => 모든 객체가 가지고 있고 프로토타입 체인이 발생하는 곳이다. __proto__로 접근할 수 있다.
prototype => 생성자 함수가 가지고 있는 프로퍼티이다. 생성자 함수로 객체를 만들면 그 객체의 [[protoType]]이 된다.

일반적인 필드는 생성된 객체의 프로퍼티로 추가된다.
constructor에서 항상 super()를 먼저 호출해야 한다.

2. Class and 생성자내의 메서드
클래스내의 메서드는 객체 내부의 존재하지 않고 [[protoType]]에 존재한다.
reason => 클래스내의 메서드는 로직은 바뀌지 않는다. 이러한 특성을 때문에 JS가 최적화를 한다. 프로토타입에 메서드를 추가함으로써 새 person 객체를 만들 떄마다 동일한 프로토타입을 가지게 된다. => 성능 향상

프로토타입에 추가하지 않고 일반 객체의 메서드로 존재하게 하고 싶다면
1. constructor에 메서드를 추가한다.
2. 일반함수나 화살표 함수를 축약하지 않고 생성한다.


