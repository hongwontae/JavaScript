1. 모달과 추가 버튼 선택하기
오버레이를 표시하는 기능 => 모달(Modal)
Our goal => add movie를 누르면 id='add-modal'에 접근해서 visible 클래스를 추가하는 것이다.


2. CSS 클래스 변경을 통한 모달 열기 (dom-08-toggle-modal-visible-class)
classList의 toggle()메서드를 사용해야 한다.
toggle('클래스 이름') => 해당되는 클래스 이름이 없다면 추가하고 있으면 삭제하는 메서드


3. 배경(backdrop) 제어하기 (dom-09-handling-movie-modal)
배경을 누르면 모달창이 사라지는 로직 구성 => classList.toggle를 이용했다.


4. 사용자 입력 페칭 및 검증 (dom-10-getting-user-input)
trim() => 공백제거
input값을 가져올 떄 js의 행동요령


5. JavaScript에서 영화 생성 And 입력 제거하기 (dom-10-getting-user-input)
빈 배열 변수를 하나 만든다. Input를 통해 값을 가져오고 push를 이용해서 객체타입으로 배열에 넣는다.


6. 화면에 영화 항목 렌더링하기 (dom-11-adding-and-rendering-movies)
const printJS = (title, URL, rating) => {
  const newMovieElement = document.createElement('li')
  newMovieElement.className = 'movie-element'
  newMovieElement.innerHTML = `
  
  <div class="movie-element__image">
    <img src="${URL}" alt="${title}">
  </div>
  <div class="movie-element__info">
    <h2>${title}</h2>
    <p>${rating}/5 stars</p>
  </div>

  `;

  const listRoot = document.getElementById('movie-list')
  listRoot.append(newMovieElement)
}


7. 영화 요소 제거하기 (dom-12-delete-elements)
Function.bind(thisArg, [arg1, arg2, ...])
thisArg // this가 가리킬 객체를 지정
[arg1, arg2 ... ] // 함수의 인자로 전달할 값
이때 첫 번째 인자인 thisArg는 선택옵션으로 값을 전달하지 않아도 되며 null 등을 사용할 수 있다. 그 다음은 함수에 전달 할 인자 값으로 배열 타입으로 전달하게 된다. 

=> 잡아준다라는 뜻이다.


8. two modal (dom-13-two-modals)
=> 두 개의 모달을 이용해서 작업


9. 구성 논리 시작하기 (dom-13-two-modals)


10. final
replaceWith


















