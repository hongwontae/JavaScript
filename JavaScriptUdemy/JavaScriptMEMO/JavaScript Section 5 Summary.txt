1. var/let/const 범위
var는 전역/함수레벨 스코프이다. let과 const는 블록레벨스코프이다.
var는 재선언이 가능하다. let은 재선언이 불가능하고 재할당이 가능하다. const는 재선언이 불가/재할당도 불가
var/let/const는 함수 내부에서 전역으로의 참조는 가능하다. 역의 성립하지 않는다.


2. JS엔진
인터프리터 => 코드를 읽고 실행하고 바이트 코드로 변환
컴파일러 => 바이트 코드를 머신코드로 변환하여 재사용 시 빠른 작업을 용이하게 한다.

Stack => 단기 메모리/ 원시 값이 저장된다./ Heap에서 함수가 호출되면 Stack으로 함수가 이전된다. 스택구조처럼 
작동한다.
Heap => 장기 메모리/ 참조값이 저장된다. 함수가 저장된다.


3. 원시값/ 참조값
원시값은 stack => 실제 값이 저장된다.
참조값은 Heap => 실제 값이 아닌 주소값이 저장된다.


4. 가비지 컬렉터
사용하지 않는 객체를 메모리에서 지운다./ 함수가 재사용되면 새로이 메모리를 할당하지 않고 함수를 재사용한다.