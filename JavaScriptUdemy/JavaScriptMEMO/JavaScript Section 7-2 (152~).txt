node는 DOM 계층구조에 속한 객체의 어떤 타입이든 가리킬 수 있는 이름입니다. node는 내장 DOM 엘리먼트(document, document.body)나 HTML의 특정 태그(input, p) 또는 텍스트 노드가 될 수도 있습니다. 그니까 간단히 얘기해서 node는 아무 DOM 객체나 될 수 있다는 거죠.

element는 node의 특정한 하나의 타입인데요. 노드에는 정말 많은 타입이 있습니다... (텍스트 노드, 주석 노드, document 노드 기타 등등) element는 HTML tag로 바로 특정할 수 있거나, id나 class 같은 속성을 가진 것들입니다. 각 노드들은 .nodeType이라는 프로퍼티를 갖고 있는데, 이게 바로 그 노드가 어떤 타입인지 말해 주죠. ELEMENT_NODE 타입은 nodeType 프로퍼티 값이 1인 특정 타입입니다.

Node의 여러 타입 중 하나가 element이며 element는 Node보다 더 작은 개념이라고 생각하면 될 듯하다.



1. DOM 프로퍼티 탐구 및 변경 (dom-02-basic-selection-code)
무엇가를 조작하는 것이 아니라 노드의 정보를 얻기위한 프로퍼티도 사용한다.

const a1 = document.querySelector('h1')
a1.textContnet => a1에 해당하는 텍스트는?
a1.className => a1에 해당하는 css class는?
a1.id => a1에 해당하는 id는?
=> 해당 CSS 클래스나 ID도 변경할 수 있다.

al.style.backgroundColor = 'white' => 문서 객체의 style 속성을 이용해서 css를 변경할 수 있다.


2. 속성 VS 프로퍼티 (dom-02-basic-selection-code)
Input태그에는 id/class/value.. 존재한다. html 태그에 추가하는 것은 해당 태그의 속성이다.(HTML에 관련됨)
프로퍼티는 HTML코드를 기반으로 생성된 객체에 저장된 값이다. (JS에 관련됨)

ex) input의 class는 DOM객체의 ClassName 프로퍼티로 변환된다.

대부분은 실시간 동기화(DOM의 객체를 변경하면 HTML의 속성도 변경되여 웹 페이지 반영되는 것.. 반대로 경우도 포함)
가 가능하지만 HTML의 value는 불가능하다.
HTML의 직접적으로 속성변경은 JS DOM 프로퍼티도 적용받지만 반대의 경우는 허용하지 않는다.


3. 다수의 요소 선택하기 (dom-02-basic-selection-code)
querySelectorAll()


4. DOM 탐색
DOM 트래버싱 => 어떤 요소를 선택하면 하위 요소 or 상위요소를 검색하거나 추가하거나 변경할 수 있는 개념
Child => 직접적인 자식 노드
Descendant => 직접 또는 간접적인 자식 노드
Parent => 직접적인 부모 노드
Ancestor => 직접 또는 간접적인 부모 노드


5. 자식 노드 탐색하기
(-- review : DOM트리는 노드로 이루어져있다. 노드는 요소노드(html태그)/ 텍스트 노드 etc..로 이루어져 있다.)
.children => 반환타입은 HTMLCollection (유사 배열 객체)이고 자식들을 모두 보여준다. (요소노드)
.childNodes => 반환타입은 NodeList (유사 배열 객체)이고 자식들을 모두 보여준다. (요소노드 + 텍스트 노드)
.fistChild => 자식요소 첫 번쨰의 텍스트 노드에 접근한다.
.firstElementChild => 자식요소 첫 번째의 요소노드에 접근한다.
.lastChild => firstChild의 반대
.lastElementChild => firstElementChild의 반대


6. 부모노드와 부모요소 사용하기
.parentElement => 부모의 요소를 반환한다. 부모가 없다면 null을 반환한다.
(부모가 요소여야만 요소를 반환한다.)
.parentNode => 부모의 노드를 반환한다. 부모가 없다면 null을 반환한다.
(부모가 요소인지 노드인지 관계없이 부모노드를 반환한다.)
=> document.documentElement의 부모는 document인데, document는 요소가 아니다.(document는 html태그가 아니다.) 그렇기에 element를 사용하면 null이 반환된다.

closest() => CSS선택자를 사용한다. 가장 가까운 조상 요소를 선택한다.




























