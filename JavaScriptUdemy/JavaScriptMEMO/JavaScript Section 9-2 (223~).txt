1. 필터 기능 추가하기
삼항 연산자는 할당이 가능하다.

const a1 = '';
const a2 = !a1 ? 'true' : 'false';
console.log(a2) => 'true';


2. 체이닝 이해하기
체이닝의 개념은 객체 뿐만아니라 메서드에서도 활용이 가능하다.

ex) let a = {info : {title : 'HWT', age : 20}};
   console.log(a.info.title) => 'HWT';
   console.log(Math.random().toString())


3. 전개연산자(...)
배열에 사용하는 전개연산자와 같다.

let a = {name: 'hwt', age : 30, ko : [1,2,3,4,5]}
let a1 = {...a};
console.log(a1) => {name: 'hwt', age : 30, ko : [1,2,3,4,5]}

a.name = '홍원태';
=> a의 이름은 바뀐다. a1의 이름은 바뀌지 않는다. 객체는 참조값이다.
=> 전개연산자는 값을 복사하여 새로운 참조값으로 넘겨준다. 단 중첩참조값은 그대로 데려간다.

a.ko.push(6)
a1의 ko의 배열도 6이 들어간다.
=> let a2{...a, ko : [...a.ko]} => 배열에도 전개연산자를 사용해서 새로운 참조값을 부여하면 된다.





























