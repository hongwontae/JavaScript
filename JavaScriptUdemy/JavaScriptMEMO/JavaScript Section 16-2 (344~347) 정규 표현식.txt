1. 정규 표현식("RegEx")
정규 표현식은 문자열이 유효한지 검사할 떄 사용된다. 이를 통해서 문자열의 패턴을 찾아볼 수 있다.

정규 표현식을 만드는 방법
1.  new RegExp 생성자 함수를 이용해서 만들어서 찾고자 하는 패턴을 표현하는 문자열을 인자에 넣는 방법
2. // 두 개의 슬래시 안에 찾고자 하는 패턴을 표현하는 문자열을 넣는 방법 

정규 표현식의 인자 또는 // 슬래시 사이에 넣을 수 있는 구문은 매우 다양하다.

정규 표현식은 대소문자를 구분한다.


2. 정규 표현식 더 보기

2-1. 정규 표현식에 단순히 문자열만 들어간 경우
=> 그 문자열이 포함되어 있는지 아닌지를 Boolean으로 나타낸다.
=> const regex = /hello/;
=> regex.test('hello')

2-2. (|)
=> 대소문자를 구별하지 않고 있는지 없는지 Boolean으로 나타낸다.
=> const regex = \(h|H)ello\;

2-3. .
=> .은 앞에 무엇이 와도 상관없는 한 글자이다.
=> const regex = /.ello/
=> test 메서드의 인자의 문자열은 한 글자는 상관없는 ello를 Boolean으로 나타낸다.ㄴ

2-4. \
=> 와일드 카드는 정규표현식에서 특별한 의미를 갖기 때문에 이를 해결하기 위해서 백슬래시 다음 와일드 카드는 일반 문자로 처리된다.





































































