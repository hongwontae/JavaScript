1. Symbol 이해하기
Symbol
=> Primitive value이다. 객체 프로퍼티 식별자인 객체의 키로 사용할 수 있다.
=> 빌트인 심볼과 고유한 심볼이 존재한다.
=> 모든 심볼은 독립적이고 유일하다.

const uid = Symbol() => 새로운 심볼을 만드는 표현식
인자에 값을 넣으면 이름이 주어지는데 이는 개발자 식별 기준일 뿐이다.

어떤 객체를 정의하고 라이브러리를 만들었다. => 해당 라이브러리를 사용하는 개발자가 객체를 사용한다.
=> 이 때 어떤 키-값은 재정의되지 않아야 하는 특정한 프로퍼티이다.
=> 이럴 떄 키에 Symbol를 부여하면 그 프로퍼티는 유일성과 독립성을 가지게 된다.

특징
1. Symbol('uid') === Symbol('uid') => false이다.
=> 인자에 전해주는 값은 단지 개발자 디버깅, 식별용일 뿐이다. 해당 심볼 변수가 아니다.
2. 해당 키값에 접근하는 방법은 내부 코드에서만 가능하다. 외부에서는 불가능하다.
3. 객체의 키 값을 설정할 떄 많이 사용한다. => 이 떄 키에 접근하지 못하기 떄문에 유일성과 독립성이 보장되는 것이다.


* 내부 코드에서 접근하는 방법 => 객체[심볼 변수] = value;





