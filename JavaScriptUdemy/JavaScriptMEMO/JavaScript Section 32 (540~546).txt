1. 프로그래밍 패러다임이란 무엇인가?
프로그래밍 패러다임이란 코드를 작성하고 정돈하는 방식을 의미한다. 코드가 어떻게 정렬되는지에 따라 세 가지의 패러다임으로 나뉘어진다.

객체지향, 절차지향, 함수지향이 존재한다.

객제지향 프로그래밍
=> 객체에 로직이나 데이터를 체계화한다.
=> JavaScript Class 문법을 사용하여 코드를 작성한다고 보면 된다.

절차지향 프로그래밍
=> Top to Botton 식으로 코드를 작성하는 것을 의미한다.
=> js를 처음 배울 떄 작성하는 코드가 그 예이다.
=> 그저 단계에 따라 실행하는 것 뿐이다.

함수지향 프로그래밍
=> 함수를 통해 코드를 정의한다.
=> 함수 내의 로직이 많고 이를 통해서 코드 실행을 하는 것을 의미한다.


2. 절차 지향 프로그래밍 실습
절차 지향적이라는 말은 무조건 함수나 객체를 사용하지 않고 코드를 작성한다는 것이 아니다. 무엇을 기준으로 코드를 작성하고 체게화하는지에 대한 개념일 뿐이다.

절차지향은 top-botton 형식이고 바닐라 js에 굉장히 가깝게 코드를 작성한다.

클래스나 함수를 사용하면 top-botton 구조를 벗어나기 때문에 큰 차이점이라고 볼 수 있다.


3. 객체 지향 프로그래밍 실습
생성자 함수나 클래스를 사용해서 코드를 작성하고 체계화하는 것이 객체 지향 프로그래밍이라고 할 수 있다.

객체 지향 프로그래밍은 코드 작성 순서에 구애받지 않음으로 로직에만 신경쓸 수 있다. 또한 객체를 재생성하여 사용할 수 있기 때문에 불필요한 반복을 줄일 수 있다.



4. 함수형 프로그래밍 실습





























