JavaScript Section 9-3 (229 ~)

1. this

1-1. 일반 함수 실행 방식 (Regular Function Call)
일반 함수 실행 방식으로 함수를 실행했을 때 this의 값은 Global Object를 가리킨다. (브라우저 상에서는 window 객체)

ex) var age = 100;
 
function foo () {
  var age = 99;
  bar(age)
}
 
function bar () {
  console.log(this.age);
}
 
foo();
=> strict모드나 let,const는 1의 경우에 항상 undefined가 반환된다.


1-2. 도트 표기법 (Dot Notation)
Dot Notation으로 함수가 실행되면, this는 그 도트 앞에 써있는 객체 자체를 가리킨다

ex) var age = 100;
 
var ken = {
  age: 35,
  foo: function () {
    console.log(this.age);	// 35
  }
}
ken.foo();
=> 위 코드에서 this.age의 this는 ken을 가리킨다. 그러므로 this.age는 ken.age와 같기 때문에 35가 출력된다.
=> let,const,var다 같은 로직으로 움직인다.


2. 메서드 축약어 구문

ex) const newMovie = {
    info: {
      title,
      [extraName]: extraValue
    },
    id: Math.random().toString(),
    getFormattedTitle() {
      console.log(this);
      return this.info.title.toUpperCase();
    }
  };

=> getFormatteredTitle을 보면 키 : 값으로 이루어져 있지 않다. 축약어 버전이다.
=> 함수이름 () {로직} => 메서드를 작용한다.
=> 화살표 함수는 사용하면 안된다.


3. This 키워드와 이상한 작동 방식
this가 참조할 사항을 미리 구성할 떄 bind()를 사용한다.
bind()의 첫 번쨰 인자는 함수 내에서 this가 참조로 할 대상을 가리킨다.








































