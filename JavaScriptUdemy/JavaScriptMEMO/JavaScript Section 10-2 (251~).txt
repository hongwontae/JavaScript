1. Getter/Setter


1-1. getter
=> get 게터이름() {
  
  return ;
}

1-2. setter
=> set 세터이름(){

}

toFixed() => 인자로 받은 숫자까지 부동 소수점으로 인식하게 한 문자열로 치환한다.
getter와 setter도 this로 불러야 한다.

getter 메서드는 값을 사용하려고 시도하면 getter를 호출하고 setter 메서드는 값을 할당하려고 시도할 때 setter를 호출한다.
=> 일반 객체의 getter와 setter와 다른점은 클래스는 클래스 내부의 프로퍼피에 접근할 떄 발동한다. New를 통해 객체를 만들거나 클래스 메서드를 사용할 떄(메서드가 클래스의 프로퍼티에 접근하는 것일 떄)


2. 상속
상위 클래스가 가지고 있는 프로퍼티나 메서드를 하위 클래스에 넘겨주는 행위를 말한다.
하위 클래스에 extends 상위클래스를 적으면 적용된다.


3. 상속 구현하기
setAttribute()/getAttribute() => html 속성을 추가/수정하거나 가져오는 메서드이다.
class 하위 클래스 이름 extends 상위 클래스 이름 => 상속을 구현하는 방법
a클래스가 b클래스를 상속받았다. c클래스에  b클래스 객체를 생성하면 c에서 a,b둘 다 사용이 가능하다.
java와 비슷하게 하나만 상속받을 수 있다.
상속받은 하위 클래스에 this를 사용하면 상위 클래스 객체의 프로퍼티와 메서드에 접근할 수 있다.

확장을 받은 클래스의 경우에는 생성자가 없으면 부모 클래스의 생성자가 자동으로 호출된다. => 하위 클래스의 객체가 생성될 떄..
하위 클래스는 부모 클래스의 생성자가 자동으로 호출된다. 기본 생성자가 호출되는 것이다.
부모 클래스의 생성자를 인위적으로 호출하고 싶으면 super()키워드를 사용해야 한다.
(상위 클래스의 생성자의 매개변수가 존재할 떄 무조건 사용해야 한다. 가독성을 위해 super()를 그냥 호출하자.)


부모 클래스에서 인위적으로 객체를 만들기 위한 생성자는 받지 않는다.











































