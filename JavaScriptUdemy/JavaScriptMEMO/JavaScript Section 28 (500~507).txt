1. 보안 허점 개요 & 코드에 데이터 노출하기

Security Details In your code
스크립트가 브라우저에 의해 다운되고 실행된다. 페이지 방문자에게 JS 코드를 노출시킬 수 밖에 없다는 것이다. 그렇기에 Client 코드에는 보안이나 기밀사안 데이터를 넣어서는 안된다. (JS에 데이터베이스 정보가 있다면 공격당할 위험이 존재한다.)
브라우저에 의해 실행된 JS 코드는 source 탭에서 쉽게 볼 수 있기 때문에 악용될 만한 정보를 JS측에서 갖고 있으면 	보안상의 위험이 항시 존재한다.


2. 교차-사이트 스크립트 공격(XSS)

Cross-Site Scripting Attakcs
해로운 JS 코드를 애플리케이션에 삽입하고 실행시키는 공격이다.

URL에 innerHTML를 사용해서 만들고 반환하는 코드는 사용자가 URL를 악의적으로 바꿀 경우 의도치 않은 상황이 벌어진다. (최신 브라우저는 InnerHTML으로 생긴 결과값인 script 태그를 실행하지 않는다.)
하지만 html 코드를 넣으면 실행된다. <img src"ll" onerror="alert('Hi there')"> => 의도치 않은 동작을 허용하게 됐다. => innerHTML의 허점이다. 그렇기 때문에 textContent를 많이 사용한다.

사용자가 만든 데이터가 안전한지, 실행할 수 있는 스크립트가 없는지 확인할 필요가 있다.
=> sanitize-html 패키지를 사용한다. 이 패키지는 텍스트를 검사하고 원하지 않은 태그를 삭제할 떄 도움이 된다.
=> 유효하지 않는 코드가 실행되지 않는다.
=> 이 패키지의 코드를 실행하면 안전한 HTML만을 렌더링한다.

가장 좋은 방법은 DB에 저장하기 전에 서버단에서 보안 검사, 유효성 검사를 하는 것이 제일 좋다.


3. 제 3자 라이브러리 & XSS














































