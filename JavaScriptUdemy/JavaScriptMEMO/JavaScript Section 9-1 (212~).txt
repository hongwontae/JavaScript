1. 객체란 무엇인가?
사전적 정의 객체 => 현실에 있는 개체를 설명하고 인간에게 있어서 말이 되는 코드 가지고 있는 코드
JS 객체 => 키-값으로 이루어진 프로퍼티와 메서드로 이루어져 있다. 프로퍼티는 객체의 변수이고 메서드는 객체의 함수이다.

오직 객체만이 참조값이다. DOM, 함수, 배열 등등
{} => 중괄호를 사용하여 객체를 만드는 방법을 객체 리터럴 표기법이라고 한다.

★★★★객체의 프로퍼티(속성), 메서드 ★★★★
abc  = {singer : 'hwt', age : 20}
=> 프로퍼티는 {singer : 'hwt', age : 20} 객체의 속한  키-값 그 자체를 의미한다.
=> 메서드는 {go : () => {console.log('Let's Go')}} 값에 함수가 있는 것을 의미한다.
=> 속성은 html 태그에 붙어 있는 것을 말한다. <input name : value :> name이나 value를 속성이라고 부른다.

객체의 메서드를 호출할 때는 객체명.키(); 이렇게 작성한다. 그렇기 때문에 객체의 값에서는 익명함수를 사용한다.


2. 프로퍼티 추가, 수정, 삭제
객체에 정의되지 않은 프로퍼티에 엑세스를 시도하면 => undefined가 반환된다.
객체에 정의되지 않은 프로퍼티에 키-값을 할당하면 추가가 된다.
객체를 수정하는 방법도 객체에 접근해서 값을 수정하면 된다.

객체를 삭제하는 방법 => delete person.age; => person.age의 프로퍼티가 삭제된다.
객체가 삭제된다는 것은 undefined가 된다는 뜻이다.
person.age = undefined해도 객체를 삭제하는 방법과 로직은 같다.
그러나 개발자가 임의로 undefined를 부여하는 것은 규칙에 어긋나기에 지양해야 한다.


3. 특수 키 이름 & 대괄호 프로퍼티 엑세스
객체의 키는 항상 문자열로 치환된다. 그러나 객체의 키에 first name/ first-name은 허용하지 않는다.
위의 키처럼 사용하고 싶다면 따옴표를 이용해서 묶어줘야 한다.
const a = {
  'first-name' : 'hwt',
  'last name' :  'hong'
}

위의 객체의 프로퍼티에 접근하려면?
a.first-name => 접근이 허용되지 않는다.
대괄호 표기법을 사용해야 한다.
a['first-name'] = 'hwt' => 객체는 대괄호에 키를 넣어서 값을 불러올 수 있다. (배열은 인덱스를 통해서)


4. 프로퍼티 유형 & 프로퍼티 순서
키값에 numbers의 데이터 유형을 주어도 된다. 물론 문자열로 변환된다.
접근할 떄는 person.1.5/ person.1이 불가능하다. => JS가 인식하지 못한다.
접근할 때는 대괄호 표기법을 사용해야 한다. person[1.5] or person['1.5']를 사용해야 한다.

객체의 순서는 넣은 순서부터 반환된다.
ex) const a = {name : 'asd', 1 : 'asd',kkk : () => {console.log('Jinggle Bell')}}
    console.log(a) => name, 1, kkk

but 키가 숫자로만 이루어져 있다면 오름차순으로 정렬된다. 1,2,3 ...


키를 변수로 만들어서 활용할 수 도 있다.
let person = {
  'first name': 'Max',
  age: 30,
  hobbies: ['Sports', 'Cooking'],
  [userChosenKeyName]: '',
  greet: function() {
    alert('Hi there!');
  },
  1.5: 'hello'
};

1. const a = 'first-name'
person[a] => 'hwt'/ person.a는 undefined가 반환된다.
=> 기존의 키 값을 변수로 만들어서 활용한다.

2. const userChosenKeyName = 'level';
let person = {~~
  [userChosenKeyName]: '',
~~}
console.log(person.level)
=> 키 값을 동적을 생성해서 부여할 수 도 있다.
=> []에 넣지 않으면 전역에서 생성한 변수를 인식하지 못해서 []안에 넣어서 키값을 부여해야 한다.


































