Bom과 Dom
bom은 브라우저와 관련된 객체를 뜻한다. 최상위 객체는 window이다.
dom은 bom의 일부로써 문서객체이다. 문서객체는 html코드가 렌더링 될 때 JS가 인식할 수 있는 객체가 만들어지는데 이를 문서객체라고 한다.
dom은 tree 구조이며 노드들의 집합으로 이루어져 있다. 노드들은 html태그(요소)노드, 텍스트 노드, 주석 노드 등으로 이루어져 있다.


window
1. 전역객체이다. 모든 객체는 window 아래에 있다. window.alert()/ window생략가능
2. 브라우저 창의 정보를 가지고 있고 제어할 수 있다.


dom 쿼리
querySelector() => 태그와 css 선택자을 활용해서 일치하는 맨 처음 해당 dom을 선택한다. css 선택자는 .#규칙을 지켜줘야한다. 요소노드만 출력된다.
querySelectorAll() => 태그와 css class를 활용해서 모두 일치하는 해당 dom을 선택한다. css 선택자는 .규칙을 지켜줘야한다. 반환타입은 nodeList로 유사 배열 객체이고 요소노드+텍스트노드가 반환된다.

getElementById => css id를 선택하여 반환한다. css 규칙은 필요없다.
getElementByClassName => 일치하는 모든 class dom을 선택하여 반환한다. 반환타입은 HTMLCollection이다. 요소노드만 반환된다. css 규칙은 필요없다.
getElementByTagName => 일치하는 모든 html태그 dom을 선택하여 반환한다. 반환타입은 HTMLCollection이다. 요소노드만 반환된다.

nodeList vs HTMLCollection
노드 리스트는 실시간 동기화가 되지 않는다. HTMLCollection은 실시간 동기화가 된다.
노드 리스트 =< 넌 라이브 리스트/ HTHMLCollection => 라이브 리스트


node/element
element는 node의 속한다. element는 html태그를 뜻한다.


dom정보
className => 클래스 이름
id => id 이름
textContnet => 태그의 텍스트
style => css작업
etc...


속성 vs 프로퍼티
속성은 html의 id/class/value등을 태그 내의 존재하는 것을 말하고 프로퍼티는 JS가 읽을 수 있는 DOM의 객체의 값을 말한다. ClassName 같은 것


자식노드
chidren => HTMLCollection으로 자식노드들을 보여준다. 요소노드만
chidrenNodes => nodeList로 자식노드들을 보여준다. 요소노드 + 텍스트 노드
firstChild => 첫 번쨰 자식의 텍스트 노드를 보여준다.
firstElementChild => 첫 번째 요소노드
lastChild => 마지막 자식의 텍스트 노드를 보여준다.
lastElementChild => 마지막 자식의 요소노드를 보여준다.


부모노드
parentElement => 부모의 요소를 반환한다.
parentNode => 부모의 노드를 반환한다. (노드들)
closest() => css선택자를 사용한다. 가장 가까운 조상요소를 반환한다.


형제노드
previousSibling => 가장 가까운 이전 형제노드를 반환한다.
previousElemntSibling => 가장 가까운 이전 형제요소를 반환한다.
nextSibling => 가장 가까운 다음 형제노드를 선택한다.
nextElementSibling => 가장 가까운 다음 형제 요소를 선택한다.


classList
classlist.toggel() => 해당 Class가 없으면 생성하고 있다면 제거하는 메서드


html 메서드
innerHTML => 요소내에 포함된 HTML,XML를 반환한다.
innerText => 눈에 보이는 텍스트만 가져온다.
textContent => 보이지 않는 텍스트도 가져온다.


createElement() => 요소를 생성한다.


Dom 요소 삽입하기
append() => 마지막 자식요소에 삽입한다. 여러 개 가능, 요소와 텍스트 노드 매개변수로 가능 html태그 불가능
appendChild() => 마지막 자식요소에 삽입한다. 하나만 가능, 요소만 가능. html태그가능
prepend() => 처음 자식요소에 삽입한다. 여러개 가능, html태그 가능, 요소,텍스트 노드 둘 다 가능
before() => 선택된 노드 전에 삽입
after() => 선택된 노드 앞에 삽입

targetElement.insertAdjacentElement(posi, element)
beforebegin => targetElement 앞에 삽입한다.
beforeend => targetElement의 자식 처음에 삽입한다.
afterbegin => targetElement 뒤에 삽입한다.
afterend => targetElement의 자식 마지막에 삽입한다.


요소 복제하기
cloneNode()/ ture면 요소+텍스트/ false면 요소만


요소 제거하기
remove() => 해당 노드를 삭제한다.
removeChild() => 해당된 자식 노드를 삭제한다.

























