var, let, const의 차이

let과 const는 블록 범위 스코프를 가지고 var는 전역범위, 함수범위 스코프를 가진다.
var는 중괄호안에 존재할 떄는 블록 범위이고 ()안에 존재할 때는 전역 범위를 가진다.

var는 중복 선언이 가능하다. let는 재할당만 가능하고 const는 재할당도 불가능하다.

var는 예약어 키워드도 변수명으로 사용할 수 있다.
변수 선언 키워드 없이 변수를 만들면 오류가 발생하지 않는다. 자동으로 var가 붙는다.
=> 이를 해결하기 위해서는 'use strict'를 코드 내에 적어줘야 한다.


크롬의 JS엔진은 V8이라고 불린다. v8에는 인터프리터와 컴파일러가 존재한다. 인터프리터는 js코드를 읽고 실행한다.
이 때 스크립트를 바이트 코드로 변환한다. 그리고 이 바이트 코드를 컴파일러에게 넘겨주고 컴파일러는 머신 코드로 컴파일 한다. 이 작업은 재 실행되었을 때 빠르게 실행하기 위함이다.


JS엔진에는 Heap과 Stack이라는 공간이 있다. Heap은 장기메모리/ Stack은 단기 메모리이다.
Heap은 함수나 참조값이 저장되는 공간이고 Stack은 원시값이 저장되는 공간이다.
함수가 실행되면 Heap 공간에서 Stack공간으로 함수를 준다. Stack공간에서 차례로 쌓이듯이 실행하고 후에 사라진다.


JS의 자료형은 원시값과 참조값으로 나뉜다. 
원시값은 string, number, null, undefined, symbol, boolean
참조값은 함수, 객체, 배열

원시값은 Stack공간에 값 그 자체를 저장하고 참조값은 Heap공간에 주소값을 저장하고 값은 브라우저 메모리 어딘가에 저장한다.


가비지 컬렉터
사용하지 않는 객체를 브라우저 상의 메모리에서 지워버린다.
함수가 재사용되면 다시 메모리에 넣지 않고 실행한다.
















