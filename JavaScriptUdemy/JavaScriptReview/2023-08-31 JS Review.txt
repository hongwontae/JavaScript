for => 일반적인 반복문
for-of => 배열에 적합한 반복문
for-in => 객체에 적합한 반복문
of/in이 const를 사용하는 이유 => 새로운 값을 만들어 내기 때문이다.
중첩반복문 = 외부 실행문 1 => 외부 실행문 다

while/do while => while(조건){반복할 코드 + 빠져나갈 코드} do{반복할 코드 + 빠져나갈 코드} while)(조건)
=> while은 조건이 맞지 않으면 실행 자체가 안됨 do/while은 한번이라도 실행한다.

break/continue
=> break는 반복문/if문의 실행을 멈춘다. 반복문/if문의 실행을 넘겨뛴다.


try-catch
잠재적인 오류를 대비하기 위해 사용한다.
try 구문이 실행된다. 에러가 없다면 catch를 무시한다. 에러가 존재하면 try를 실행하지 않고 catch 구문을 실행한다.
catch구문의 매개변수를 작성했다면 자동적으로 해당 error에 값이 들어온다. finally는 try/catch에 구애받지 않고 한 번은 무조건 실행한다.