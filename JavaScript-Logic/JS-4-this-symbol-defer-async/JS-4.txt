1. this
1-1. 일반적으로는 메서드를 호출 하는 객체를 가르킨다.
1-2. 전역의 this는 window를 가르킨다.
1-3. 일반 함수의 this는 window, strict-mode에서는 undefined
1-4. 프로토타입의 this 호출한 객체를 가르킨다.


2. call, apply, bind
=> 첫 번쨰 인자로 넘겨주는 것이 this context 객체
ex) test.call('네네네')
=> test 함수 내의 this는 '네네네'를 바라본다.
call, apply는 binding + 호출/ bind는 bound 함수를 리턴한다.(this 바인딩 함수)


3. Symbol
symbol은 유일한 식별자를 만들고 싶을 떄 사용한다.

특징
3-1. obj의 키로 string과 symbol만이 가능하다.
3-2. Symbol()를 통해 symbol 할당가능
3-3. Symbol("...")를 통해 이름부여가능 but 단지 설명일 뿐이다.
3-4. 심볼은 숨김 프로퍼티를 만들고 싶을 떄 사용한다.


4. defer/async
html을 읽다가 script 태그를 만나면 script를 읽고 실행하기 위해 DOM 생성을 멈춘다. script를 다 읽고 나서
DOM를 생성하기 떄문에 의도하지 않은 결과를 일으킨다.

4-1. defer
script tag에 defer가 붙어있으면 script 태그를 만나도 DOM 생성을 멈추지 않고 생성한다. 
다만 script 태그를 읽기 위해 로드한다. DOM 생성이 끝나면 그 떄 script를 실행한다.
=> 병렬적 로드, 직렬적 실행

4-2. async
script tag에 async가 있다면 dom 생성을 차단하지 않고 script를 로드한다. 다만 script가 다 로드되면
dom 생성을 막고 script를 실행한다.
=> 병렬적 로드, 병렬적 실행

