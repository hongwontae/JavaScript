1. JS Expression, Statement
정의 : Expression(표현식)은 값을 결정짓기 위해 평가될 수 있는 구문
        Statement(문)은 프로그램을 구성하는 기본 단위, 최소 실행 단위이다.

특징
1-1. 표현식은 단일 값을 생성한다.
1-2. 값으로 평가될 수 있는 문은 표현식이다.
1-3. 값 자체도 표현식이다.
1-4. 문은 값이 들어가야 할 곳에 들어갈 수 없다.


2. while
정의 : 반복문의 중 하나

특징
2-1. while(condition){
    본문..
}

2-2. 반복문이 한 번 실행되는 것을 이터레이션이라고 부른다.


3. do while
정의 : while과 비슷하지만 condition을 아래에 배치한다.

특징
3-1. do{
    body...
}while(condition)

3-2. do-while문은 한 번은 반드시 실행된다.


4. for
정의 : 가장 대표적인 반복문

특징
4-1. for(begin; condition; step){
    body...
}

4-2. 콜론이 없다면 에러가 발생한다.
4-3. step은 body 실행 이후에 실행된다.
4-4. for의 인자 중 필요하지 않다면 생략가능
4-5. break => 반복문을 빠져나오는 키워드
4-6. continue => 현재 실행중인 이터레이션 종료하고 다음 이터레이션 실행시키는 키워드


5. switch 문
정의 : if문의 대체문

특징
5-1. (let a = 2 + 2;) switch (a) {
  case 3:
    alert( '비교하려는 값보다 작습니다.' );
    break;
  case 4:
    alert( '비교하려는 값과 일치합니다.' );
    break;
  case 5:
    alert( '비교하려는 값보다 큽니다.' );
    break;
  default:
    alert( "어떤 값인지 파악이 되지 않습니다." );
}
5-2. a와 case의 값이 같으면 본문을 실행한다.
5-3. break은 조건에 부합하면 빠져나오는 명령어이다. => 없으면 의도하지 않은 결과
5-4. switch의 a와 case value의 자료형은 같아야 한다.


6. 함수
정의 : 프로그램을 구성하는 주요 구성 요소이다.

특징
6-1. 함수 선언문 : function add(){} / 호이스팅된다.
6-2. 함수 표현식 : let a = ()=>{} / 호이스팅 되지 않는다. 위치가 중요하다.
6-3. 지역 변수 : 함수 내부에서 선언한 변수를 의미한다.
6-4. 외부 변수 : 전역 변수
6-5. 매개 변수 : 선언시 ();
(매개변수에 인수 전달하지 않았을 떄 undefinded가 할당된다. 매개변수 =으로 default 값을 만들면 예방가능)
6-6. 인수 : 호출 시 ();
6-7. return : 반환 값/ 함수가 return을 만나면 함수 본문을 종료한다./ return은 끝에 자동으로 ;가 붙어 있다.
6-8. callback func : 함수를 함수의 인수로 전달하고, 필요할 떄 인수로 전달한 함수를 호출하는 것이 콜백함수이다.
6-9. 익명 함수 : 인수에 콜백함수나 함수 표현식의 할당할 func은 이름이 없어도 된다.


7. 화살표 함수
정의 : 함수를 간결하게 작성하는 문법

특징
7-1. let a  = (a,b)=>{
    let c = a+b;
    return c;
}
7-2. 화살표 함수의 매개변수가 하나라면 괄호 생략 가능
7-3. 중괄호를 제거할 수 있지만 한 라인에 존재해야 하고 return이 포함되어 있다.

